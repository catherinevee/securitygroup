name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  TF_VERSION: "1.13.0"
  TFLINT_VERSION: "v0.48.0"
  TF_SEC_VERSION: "v1.28.1"

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: ${{ env.TFLINT_VERSION }}

    - name: Setup tfsec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        version: ${{ env.TF_SEC_VERSION }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: TFLint
      run: tflint

    - name: tfsec
      run: tfsec .

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      run: terraform init

    - name: Run Terraform Tests
      run: |
        if [ -f "test/security_group_test.tftest.hcl" ]; then
          terraform test
        else
          echo "No test files found"
        fi

    - name: Test Examples
      run: |
        for example in examples/*/; do
          if [ -d "$example" ]; then
            echo "Testing example: $example"
            cd "$example"
            terraform init
            terraform plan
            cd ../..
          fi
        done

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform
        output_format: sarif
        output_file_path: checkov-results.sarif

    - name: Upload Checkov results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: checkov-results.sarif 